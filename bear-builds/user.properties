##
## java源文件存放的目录
##
src.dir=${project.dir}/src

##
## 单元测试代码存放的目录
##
test.dir=${project.dir}/test

##
## 配置文件存放的目录
##
conf.dir=${project.dir}/conf

##
## 存放web组件的目录
##
web.dir=${project.dir}/webapp

##
## 存放server配置文件的目录
##
server.dir=${project.dir}/server

##
## 存放sql升级文件的目录
##
sql.dir=${project.dir}/sql

##
## 存放单元测试报告的目录
##
junit.report.dir=${project.dir}/report

##
## 存放依赖包的地方
##
lib.dir=${project.dir}/lib

##
## ivy文件
##
ivy.file=${project.dir}/ivy.xml

##
## build生成文件临时存放的目录，比如java类编译后的class文件、打包后生成的jar包等。
##
build.dir=${project.dir}/build

##
## 生成class文件存放的目录
##
classes.dir=${build.dir}/classes

##
## 存放测试类生成的class文件的目录
##
test.classes.dir=${build.dir}/test

##
## 测试依赖的第三方jar包存放的路径
##
test.dependency.lib.dir=${lib.dir}/test

##
## 打包后生成的jar包名称
##
jar.file=${ant.project.name}

##
## 定义需要利用xdoclet生成hbm.xml文件的Java文件的匹配模式
##
hbm.build.pattern=com/fpi/bear/**/model/*.java,com/mobi/**/model/*.java

##
## 存放web extjs 组件的目录。
##
component.web.dir=${web.dir}

##
## 存放组件描述信息的文件
##
component.dst.path=${build.dir}/${ant.project.name}.component.xml

project.description=

##
## 项目状态信息，一般是用在Ivy发布的时候
##
project.version=1.0
project.status=integration

##
## 
##
js.compress.include.pattern=**/*.js
js.compress.exclude.pattern=**/test/**/*.js
css.compress.include.pattern=**/*.css
css.compress.exclude.pattern=**/test/**/*.css

##
## javac的一些参数
##
javac.compiler=modern
javac.debug=on
javac.deprecation=off
javac.fork=true
javac.memoryMaximumSize=256m
javac.nowarn=on